<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.jfachwert</groupId>
  <artifactId>jfachwert</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <name>jFachwert</name>

  <description>Implementierung einiger Fachwerte nach dem WAM-Ansatz</description>
  <inceptionYear>2017</inceptionYear>
  <url>http://www.jfachwert.de/</url>

  <!-- see http://maven.apache.org/pom.html#Licenses -->
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
  </properties>


  <build>

    <plugins>

      <!-- Java Compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <!-- JUnit Testing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.0</version>
        <configuration>
          <excludes>
            <exclude>**/Abstract*.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- Integration-Test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.0</version>
        <configuration>
          <argLine>${argLine} -Djava.util.logging.config.file=logging.properties</argLine>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Sonar -->
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.3.0.603</version>
      </plugin>

      <!-- Code Coverage  -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.2</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version>
      </plugin>

      <!--
          Maven Site Plugin
          call 'mvn site:site' to generate web site
          see http://maven.apache.org/plugins/maven-site-plugin/examples/creating-content.html
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.6</version>
        <configuration>
          <locales>de</locales>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
      </plugin>

      <!--
        Bitte nicht jgitflow-maven-plugin 1.0-m5.1 verwenden
        s. https://ecosystem.atlassian.net/browse/MJF-249
      -->
      <plugin>
        <groupId>external.atlassian.jgitflow</groupId>
        <artifactId>jgitflow-maven-plugin</artifactId>
        <version>1.0-m5.1</version>
        <configuration>
          <pushFeatures>true</pushFeatures>
          <pushHotfixes>true</pushHotfixes>
          <pushReleases>true</pushReleases>
          <noDeploy>true</noDeploy>
          <flowInitContext>
            <masterBranchName>master</masterBranchName>
            <developBranchName>develop</developBranchName>
            <featureBranchPrefix>feature/</featureBranchPrefix>
            <releaseBranchPrefix>release/</releaseBranchPrefix>
            <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
            <versionTagPrefix>${project.artifactId}-</versionTagPrefix>
          </flowInitContext>
        </configuration>
      </plugin>

    </plugins>

  </build>


  <reporting>

    <plugins>

      <!-- Project Reports (like dependencies) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.9</version>
      </plugin>

      <!--
          Javadoc
          see http://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.0.0-M1</version>
        <reportSets>
          <reportSet>
            <id>html</id>
            <configuration>
              <source>${java.version}</source>
              <show>protected</show>
              <links>
                <link>http://docs.oracle.com/javase/8/docs/api/</link>
              </links>
            </configuration>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

    </plugins>

  </reporting>


  <!--
    Hier werden nur die Versionen der verwendeten und potentiellen Bibliotheken
    definiert (alphabetisch geordnet nach groupId).
  -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.9.3</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>4.2</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.8.1</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.11</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>findbugs</artifactId>
        <version>3.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.javamoney</groupId>
        <artifactId>moneta</artifactId>
        <version>1.1</version>
      </dependency>
      <dependency>
        <groupId>org.javamoney</groupId>
        <artifactId>javamoney-tck</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>javax.money</groupId>
        <artifactId>money-api</artifactId>
        <version>1.0.3</version>
      </dependency>
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>1.1.0.Final</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
      </dependency>
      <dependency>
        <groupId>org.patterntesting</groupId>
        <artifactId>patterntesting-rt</artifactId>
        <version>1.7.2</version>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <dependencies>

    <!-- normale Libs -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>

    <!-- fuer Validierungen -->
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
    </dependency>

    <!-- Vorgriff auf Java 9 -->
    <dependency>
      <groupId>javax.money</groupId>
      <artifactId>money-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- Workaround, s. https://github.com/JavaMoney/jsr354-ri/issues/158 -->
    <dependency>
      <groupId>org.javamoney</groupId>
      <artifactId>moneta</artifactId>
    </dependency>
    
    <!-- Serialisierung (optional) -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Test-Libs -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.patterntesting</groupId>
      <artifactId>patterntesting-rt</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.javamoney</groupId>
      <artifactId>javamoney-tck</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>


  <scm>
    <connection>scm:git:git://github.com/oboehm/jfachwert.git</connection>
    <url>https://github.com/oboehm/jfachwert</url>
  </scm>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/oboehm/jfachwert/issues</url>
  </issueManagement>

  <ciManagement>
    <system>Travis CI</system>
    <url>https://travis-ci.org/oboehm/jfachwert</url>
  </ciManagement>

  <developers>
    <developer>
      <name>Oliver Boehm</name>
      <id>oboehm</id>
      <email>ob@jfachwert.de</email>
      <organization>JUGS</organization>
      <roles>
        <role>Java Developer</role>
      </roles>
    </developer>
  </developers>


  <profiles>

    <!--
      Deses Profile verwendet AspectJ, um zusaetzliche Log-Ausgaben per
      Aspekte zu injizieren. Die Aspekte dazu befinden sich unter src/main/aspect.
      Das erzeugte Jar-File hat zusaetzlich ein "-debug" im Namen.
    -->
    <profile>

      <id>debug</id>

      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jar-plugin</artifactId>
              <version>3.0.2</version>
              <configuration>
                <classifier>debug</classifier>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <!-- AspectJ Compiler -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>aspectj-maven-plugin</artifactId>
            <version>1.10</version>
            <configuration>
              <source>${java.version}</source>
              <target>${java.version}</target>
              <complianceLevel>${java.version}</complianceLevel>
              <aspectLibraries>
                <!-- we need the AbstractTraceAspect from PatternTesting -->
                <aspectLibrary>
                  <groupId>org.patterntesting</groupId>
                  <artifactId>patterntesting-rt</artifactId>
                </aspectLibrary>
              </aspectLibraries>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>compile</goal>       <!-- use this goal to weave all your main classes -->
                  <goal>test-compile</goal>  <!-- use this goal to weave all your test classes -->
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

      <dependencies>
        <!-- needed for Log-Aspect -->
        <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjrt</artifactId>
          <version>1.8.9</version>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
          <version>2.8</version>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <version>2.8</version>
        </dependency>
        <dependency>
          <groupId>org.patterntesting</groupId>
          <artifactId>patterntesting-rt</artifactId>
        </dependency>
      </dependencies>

    </profile>

    <!--
      Das doc-Profile dient zum Erzeugen der Architekt-Dokumentatin
      in src/main/asciidoc. Es erzeugt aus den verschiedenen Kapiteln
      eine einzige HTML-Datei (index.html). Die Vorlage dazu stammt aus
      https://github.com/dukecon/dukecon

      Mit 'mvn -Pdoc generate-resources' wird die Dokumentation erzeugt
      und in target/generated-docs abgelegt.
     -->
    <profile>
      <id>doc</id>
      <properties>
        <asciidoctor.maven.plugin.version>1.5.6</asciidoctor.maven.plugin.version>
        <asciidoctorj.version>1.5.3.2</asciidoctorj.version>
        <asciidoctorj.diagram.version>1.3.1</asciidoctorj.diagram.version>
        <jruby.version>1.7.21</jruby.version>
      </properties>
      <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>${asciidoctor.maven.plugin.version}</version>
            <dependencies>
              <!-- Comment this section to use the default jruby artifact provided by the plugin -->
              <dependency>
                <groupId>org.jruby</groupId>
                <artifactId>jruby-complete</artifactId>
                <version>${jruby.version}</version>
              </dependency>
              <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj</artifactId>
                <version>${asciidoctorj.version}</version>
              </dependency>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj-diagram</artifactId>
                <version>${asciidoctorj.diagram.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <requires>
                <require>asciidoctor-diagram</require>
              </requires>
              <!-- see http://asciidoctor.org/docs/asciidoctor-maven-plugin/ -->
              <resources>
                <resource>
                  <!-- (Mandatory) Directory to copy from. Paths are relative to maven's ${baseDir} -->
                  <directory>src/main/asciidoc/images</directory>
                  <!-- (Optional) Directory to copy to. By default uses the option `outputDirectory` -->
                  <targetPath>images</targetPath>
                  <!-- (Optional) NOTE: SVN, GIT and other version control files are excluded by default, there's no need to add them -->
                  <excludes>
                    <exclude>**/.txt</exclude>
                  </excludes>
                  <!-- (Optional) If not set, includes all files but default exceptions mentioned -->
                  <includes>
                    <include>**/*.jpg</include>
                    <include>**/*.gif</include>
                    <include>**/*.png</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
            <executions>
              <execution>
                <id>generate-html-doc-de</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>html5</backend>
                  <sourceDirectory>${basedir}/src/main/asciidoc/de/</sourceDirectory>
                  <outputDirectory>${project.build.directory}/generated-docs/de/</outputDirectory>
                  <sourceDocumentName>index.adoc</sourceDocumentName>
                  <imagesDir>../images</imagesDir>
                  <attributes>
                    <imagesdir>./images</imagesdir>
                  </attributes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>


</project>
